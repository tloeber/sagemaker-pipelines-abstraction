# Adapted from https://github.com/actions/starter-workflows/blob/main/ci/python-package.yml

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Examples

on:
  push:
    branches:
      - main
    paths:
      - 'examples/src/**'
      - 'examples/tests/**'
      - 'examples/pyproject.toml'
      - 'examples/poetry.lock'
      - 'examples/Makefile'
      - '.github/workflows/python-examples.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'examples/src/**'
      - 'examples/tests/**'
      - 'examples/pyproject.toml'
      - 'examples/poetry.lock'
      - 'examples/Makefile'
      - '.github/workflows/python-examples.yml'

env:
  AWS_DEFAULT_REGION: us-east-1

jobs:
  build:

    runs-on: ubuntu-latest
    environment: test
    strategy:
      fail-fast: false
      matrix:
        # todo: can we get this from pyproject.toml to avoid discrepancy?
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1.3
      with:
        version: 1.8.2
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv if found
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: examples/.venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}

    - name: Install dependencies (excluding project code, so it isn't cached!) IFF cache miss
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        cd examples
        poetry install --no-interaction --all-extras --no-root

    - name: Install project
      run: |
        cd examples
        poetry install --no-interaction --all-extras

    - name: mark sagemaker sdk as typed
      run: |
        cd examples
        SAGEMAKER_PACKAGE_LOCATION=$(poetry run python -c "import importlib.util; print(importlib.util.find_spec('sagemaker').submodule_search_locations[0])")
        touch ${SAGEMAKER_PACKAGE_LOCATION}/py.typed

    - name: Run type checking
      run: |
        cd examples
        source .venv/bin/activate
        make type-check

    - name: Run unit tests

      run: |
        cd examples
        source .venv/bin/activate
        make test